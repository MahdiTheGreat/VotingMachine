/*
 * Arduino Keypad calculator Program
 */
//#define ADDR_Ax 0b000 //A2, A1, A0
//#define ADDR (0b1010 << 3) + ADDR_Ax
#define ADDR 0b1010000
#include<SPI.h>
#include <LiquidCrystal.h> //Header file for LCD from https://www.arduino.cc/en/Reference/LiquidCrystal
#include <Keypad.h> //Header file for Keypad from https://github.com/Chris--A/Keypad
#include <Wire.h>
#include <SoftwareSerial.h>
const byte ROWS = 4; // Four rows
const byte COLS = 4; // Three columns
SoftwareSerial mySerial(18,19);
volatile boolean received;
volatile byte Slavereceived,Slavesend;

// Define the Keymap
char keys[ROWS][COLS] = {

  {'7','8','9','D'},

  {'4','5','6','C'},

  {'1','2','3','B'},

  {'*','0','#','A'}

};

byte rowPins[ROWS] = { 22, 23, 24, 25 };// Connect keypad ROW0, ROW1, ROW2 and ROW3 to these Arduino pins.
byte colPins[COLS] = { 26, 27, 28, 29 }; // Connect keypad COL0, COL1 and COL2 to these Arduino pins.

Keypad kpd = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS ); //  Create the Keypad

const int rs = 8, en = 9, d4 = 10, d5 = 11, d6 = 12, d7 = 13; //Pins to which LCD is connected
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

 int8_t Num1,Number=0;
 char action=' ';
 char key=NO_KEY;
 boolean result = true;
 String x = "";
 char c;
 boolean done=false;

 
 
 
void setup() {
//    mySerial.begin(1200);
//    Serial1.begin(1200);
   lcd.begin(16, 2);
    Serial2.begin(1200);
     Serial.begin(1200);
     Wire.begin();
     
     
  

  
  pinMode(50, OUTPUT);//Sets MISO as OUTPUT (Have to Send data to Master IN
 

  SPCR |= _BV(SPE);                       //Turn on SPI in Slave Mode
  received = false;

  SPI.attachInterrupt();                  //Interuupt ON is set for SPI commnucation

    
  
    


  pinMode(14,OUTPUT);
  pinMode(15,OUTPUT);
  pinMode(30,OUTPUT);
  pinMode(31,OUTPUT);

 
  digitalWrite(14,LOW);
  digitalWrite(15,LOW);
  digitalWrite(30,LOW);
  digitalWrite(31,LOW);

  

  
  //delay(100); //Wait for display to show info
  //lcd.clear(); //Then clean it
  //DisplayResult();
  
  while(!done){
  if(received ){
  c = Slavereceived;
    x = x + c;
    if(c=='!'){
      done=true;
    int i=0;
    int j=0;
    lcd.setCursor(0,0);
    while(i<x.length()){
      int temp=i+16;
      for(;i<temp and i<x.length();i++){
      lcd.print(x[i]);
      
    }
    j++;
    j=j%2;
    if(j==0 or i>=x.length()){
      delay(100);
      lcd.clear();
    }
    lcd.setCursor(0,j);
    }
        //We are using a 16*2 LCD display
   
    //SPI.end();
    //Serial.end();
    
    }
    received = false;
  }

  
}

lcd.clear(); //Then clean it
DisplayResult();

}

ISR (SPI_STC_vect)                        //Inerrrput routine function
{
  Slavereceived = SPDR;// Value received from master if store in variable slavereceived
  received = true;//Sets received as True
  //Print("isr");
  
}





void loop() {

 //storing pressed key value in a char


key = kpd.getKey(); //storing pressed key value in a char


if(key!=NO_KEY) DetectButtons();


if(result==true)
CalculateResult();

DisplayResult();   

}



void CalculateResult()
{
   if (action=='+'){

  Wire.beginTransmission(8);
  Wire.write(Num1);
  Wire.endTransmission();
  vote();
  delay(50);
  
    
  }
    
  else if (action=='-'){
   Wire.beginTransmission(8);
   Wire.write(-Num1);
   Wire.endTransmission();
    getBackVote();
    delay(50);
  }
  
  result=false;
}

void DetectButtons()
{ 
    lcd.clear(); //Then clean it
    if (key=='*') //If cancel Button is pressed
    {
      //mySerial.println ("Button Cancel"); 
    Number=Num1=0; 
    result=false;
    }
    
     if (key == '1') //If Button 1 is pressed
    {
      //mySerial.println ("Button 1"); 
    if (Number==0)
    Number=1;
    else{
    long temp=Number;
    Number = (Number*10) + 1; //Pressed twice
    if (String(temp,DEC ).length()>=1){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(1,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '4') //If Button 4 is pressed
    {
      //mySerial.println ("Button 4"); 
    if (Number==0)
    Number=4;
    else{
    long temp=Number;
    Number = (Number*10) + 4; //Pressed twice
    if (String(temp,DEC ).length()>=1 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(4,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '7') //If Button 7 is pressed
    {
      //mySerial.println ("Button 7");
    if (Number==0)
    Number=7;
    else{
    long temp=Number;
    Number = (Number*10) + 7; //Pressed twice
    if (String(temp,DEC ).length()>=1 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(7,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
  

    if (key == '0')
    {
      //mySerial.println ("Button 0"); //Button 0 is Pressed
    if (Number==0)
    Number=0;
    else{
      
    long temp=Number;
    Number = (Number*10) + 0; //Pressed twice
    if (String(temp,DEC ).length()>=1 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(0,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '2') //Button 2 is Pressed
    {
      //mySerial.println ("Button 2"); 
     if (Number==0)
    Number=2;
    else{
    long temp=Number;
    
    Number = (Number*10) + 2; //Pressed twice
    if (String(temp,DEC ).length()>=1 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(2,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '5')
    {
      //mySerial.println ("Button 5"); 
     if (Number==0)
    Number=5;
    else{
    long temp=Number;
    
    Number = (Number*10) + 5; //Pressed twice
    if (String(temp,DEC ).length()>=1 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(5,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '8')
    {
      //mySerial.println ("Button 8"); 
     if (Number==0)
    Number=8;
    else{
    long temp=Number;
    Number = (Number*10) + 8; //Pressed twice
    if (String(temp,DEC ).length()>=1 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(8,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }   
  

    if (key == '#')
    {
      //mySerial.println ("Button Equal"); 
    //Num2=Number;
    result = true;
    }
    
     if (key == '3')
    {
      //mySerial.println ("Button 3"); 
     if (Number==0)
    Number=3;
    else
    {
    long temp=Number;
    
    Number = (Number*10) + 3; //Pressed twice
    if (String(temp,DEC ).length()>=1 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(3,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '6')
    {
      //mySerial.println ("Button 6"); 
    if (Number==0)
    Number=6;
    else{
    long temp=Number;
    
    Number = (Number*10) + 6; //Pressed twice
    if (String(temp,DEC ).length()>=1 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(6,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '9')
    {
      //mySerial.println ("Button 9");
    if (Number==0)
    Number=9;
    else{
    long temp=Number;
    
    Number = (Number*10) + 9; //Pressed twice
    if (String(temp,DEC ).length()>=1 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(9,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }  

      if (key == 'A' || key == 'B' ) //Detecting Buttons on Column 4
  {
    Num1 = Number;    
    Number =0;
    if (key == 'A')
    {
      //mySerial.println ("Addition"); 
      action = '+';}
     if (key == 'B')
    {
      //mySerial.println ("Subtraction"); 
      action = '-'; }
    

    //delay(100);
  }
  
}

void DisplayResult()
{

  
 //lcd.clear();

  //uint8_t temp=readI2CByte(modeAdd);
  //uint8_t temp2=readI2CByte(timeAdd);
  //mySerial.println("test2");
  //mySerial.println(temp);
  //mySerial.println(temp2);

  
  lcd.setCursor(0, 0);   // set the cursor to column 0, line 1
  lcd.print(Num1); lcd.println(action); 
  //delay(100);
  lcd.setCursor(0, 1);
  lcd.print(Number);
  //delay(50);
}

void getBackVote(){
  digitalWrite(14,HIGH);
  digitalWrite(15,HIGH);
  delay(50);
  digitalWrite(14,LOW);
  digitalWrite(15,LOW);
}

void vote(){
  digitalWrite(30,HIGH);
  digitalWrite(31,HIGH);
  delay(50);
  digitalWrite(30,LOW);
  digitalWrite(31,LOW);
}

void Print(String s) {
  lcd.println(s);
  delay(50);
  lcd.clear();
}

